#include <iostream>
#include <queue>
using namespace std;

class Stack {
    queue<int> q1, q2;

public:
    // Push operation
    void push(int value) {
        // Add to q2
        q2.push(value);

        // Move all elements from q1 to q2
        while (!q1.empty()) {
            q2.push(q1.front());
            q1.pop();
        }

        // Swap q1 and q2
        swap(q1, q2);
        cout << value << " pushed to stack.\n";
    }

    // Pop operation
    void pop() {
        if (q1.empty()) {
            cout << "Stack is empty!\n";
            return;
        }
        cout << "Popped: " << q1.front() << endl;
        q1.pop();
    }

    // Peek operation
    void peek() {
        if (q1.empty()) {
            cout << "Stack is empty!\n";
            return;
        }
        cout << "Top element: " << q1.front() << endl;
    }

    // Display stack elements
    void display() {
        if (q1.empty()) {
            cout << "Stack is empty!\n";
            return;
        }

        cout << "Stack elements: ";
        queue<int> temp = q1;  
        while (!temp.empty()) {
            cout << temp.front() << " ";
            temp.pop();
        }
        cout << endl;
    }

    // Check if stack is empty
    bool isEmpty() {
        return q1.empty();
    }
};

int main() {
    Stack s;

    s.push(10);
    s.push(20);
    s.push(30);
    
    s.display();
    
    s.peek();
    
    s.pop();
    
    s.display();

    return 0;
}
